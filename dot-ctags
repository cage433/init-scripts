--langdef=scala
--langmap=scala:.scala
--regex-scala=/^[ \t]*(final)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\2/c,classes/
--regex-scala=/^[ \t]*abstract[ \t]+class[ \t]+([a-zA-Z0-9_]+)/\1/c,abstractclasses/
--regex-scala=/^[ \t]*(final)?[ \t]*case[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\2/c,caseclasses/
--regex-scala=/^[ \t]*(final)?[ \t]*case[ \t]*object[ \t]+([a-zA-Z0-9_]+)/\2/c,caseobjects/
--regex-scala=/^[ \t]*object[ \t]+([a-zA-Z0-9_]+)/\1/c,objects/
--regex-scala=/^[ \t]*(sealed)?[ \t]*trait[ \t]+([a-zA-Z0-9_]+)/\2/t,traits/
--regex-scala=/^[ \t]*type[ \t]+([a-zA-Z0-9_]+)/\1/T,types/
--regex-scala=/^[ \t]*def[ \t]+([a-zA-Z0-9_]+)/\1/m,methods/
--regex-scala=/^[ \t]*private[ \t]+def[ \t]+([a-zA-Z0-9_]+)/\1/m,privatemethods/
--regex-scala=/^[ \t]*protected[ \t]+def[ \t]+([a-zA-Z0-9_]+)/\1/m,protectedmethods/
--regex-scala=/^[ \t]*val[ \t]+([a-zA-Z0-9_]+)/\1/C,constants/
--regex-scala=/^[ \t]*lazy[ \t]+val[ \t]+([a-zA-Z0-9_]+)/\1/C,constants/
--regex-scala=/^[ \t]*var[ \t]+([a-zA-Z0-9_]+)/\1/l,local variables/
--regex-scala=/^[ \t]*package[ \t]+([a-zA-Z0-9_.]+)/\1/p,packages/ 
--exclude=*.js
--langmap=Lisp:+.clj
