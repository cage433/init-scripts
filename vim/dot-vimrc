set nocompatible              " be iMproved, required
filetype off                  " required

let g:orientation='landscape'
let g:orientation='portrait'
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'altercation/vim-colors-solarized'

Plugin 'cage433/cage433-vim-utils'
Plugin 'cage433/cage433-vim-ide-plugin'

Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'mileszs/ack.vim'
Plugin 'vim-scripts/bufferlist.vim'
Plugin 'vim-scripts/BufOnly.vim'
Plugin 'derekwyatt/vim-scala'
Plugin 'tpope/vim-fugitive'
Plugin 'cage433/scalaimports'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-fireplace'
Plugin 'tpope/vim-eunuch'
Plugin 'L9'
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

"Needed to force vim-colors-solarized to autoload
" See https://github.com/altercation/vim-colors-solarized/issues/40
call togglebg#map("")
set wildignore +=*.sha1,*.html,tags,by_source_file,by_class
"let g:ctrlp_custom_ignore = '\v[\/]\.(git|maker)$'
"let g:ctrlp_custom_ignore = '\v[\/][A-Za-z0-9-_]+[\/]target$'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v([\/]\.git$)|([\/][A-Za-z0-9-_]+[\/]((target$))|(\.maker$))',
  \ 'file': '\v(\.xml$)'
  \ }
call scalaimports#state#ignore_classes(
      \ ['Either', 'Left', 'Right', 'Default', 
      \ 'Quote', 'Sum', 'Divide', 'Times',
      \ 'Constant', 'Expression', 'Regexp']
      \ )

if filereadable(".vim.settings")
  exec "source".".vim.settings"
endif
color solarized
set ruler
set rulerformat=%55(%{strftime('%a\ %b\ %e\ %I:%M\ %p')}\ %5l,%-6(%c%V%)\ %P%)

call scalaimports#project#extend_known_imports(
  \ {
  \ "FuturesEquivalent" : "com.freetrm.curve.environment.FuturesTreatment",
  \ "European" : "com.freetrm.maths.EuropeanOrAmerican",
  \ "American" : "com.freetrm.maths.EuropeanOrAmerican",
  \ "Version" : "com.freetrm.businessstore"
  \ }
  \)
set background=light
au BufNewFile,BufRead *.jl setlocal ft=julia
" ## added by OPAM user-setup for vim / base ## 93ee63e278bdfc07d1139a748ed3fff2 ## you can edit, but keep this line
let s:opam_share_dir = system("opam config var share")
let s:opam_share_dir = substitute(s:opam_share_dir, '[\r\n]*$', '', '')

let s:opam_configuration = {}

function! OpamConfOcpIndent()
  execute "set rtp^=" . s:opam_share_dir . "/ocp-indent/vim"
endfunction
let s:opam_configuration['ocp-indent'] = function('OpamConfOcpIndent')

function! OpamConfOcpIndex()
  execute "set rtp+=" . s:opam_share_dir . "/ocp-index/vim"
endfunction
let s:opam_configuration['ocp-index'] = function('OpamConfOcpIndex')

function! OpamConfMerlin()
  let l:dir = s:opam_share_dir . "/merlin/vim"
  execute "set rtp+=" . l:dir
endfunction
let s:opam_configuration['merlin'] = function('OpamConfMerlin')

let s:opam_packages = ["ocp-indent", "ocp-index", "merlin"]
let s:opam_check_cmdline = ["opam list --installed --short --safe --color=never"] + s:opam_packages
let s:opam_available_tools = split(system(join(s:opam_check_cmdline)))
for tool in s:opam_packages
  " Respect package order (merlin should be after ocp-index)
  if count(s:opam_available_tools, tool) > 0
    call s:opam_configuration[tool]()
  endif
endfor
" ## end of OPAM user-setup addition for vim / base ## keep this line
" ## added by OPAM user-setup for vim / ocp-indent ## ec8e34184b11f39529a3384cb33218c4 ## you can edit, but keep this line
if count(s:opam_available_tools,"ocp-indent") == 0
  source "/home/alex/.opam/4.10.0/share/ocp-indent/vim/indent/ocaml.vim"
endif
" ## end of OPAM user-setup addition for vim / ocp-indent ## keep this line

set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set backspace=indent,eol,start
syntax on
